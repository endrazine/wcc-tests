FROM ubuntu:20.04

WORKDIR /root

RUN apt-get update

RUN DEBIAN_FRONTEND="noninteractive" TZ="Europe/London"RUN apt-get install -y clang libbfd-dev uthash-dev libelf-dev libcapstone-dev  libreadline-dev libiberty-dev libgsl-dev build-essential git debootstrap file cargo libdns-export1109 libdbus-1-dev dbus libdbus-1-3 openssh-server apache2 nginx gcc

# Download and add Google's signing key
RUN wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add -

# Add Google's repository
RUN sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'

# Update package list
RUN apt update

# Install Chrome
RUN apt install -y google-chrome-stable

# Build wcc & install it
RUN git clone https://github.com/endrazine/wcc.git && cd wcc && git checkout eec9f5c130b252ec1e0031014d5acf357e2b78a2 && git submodule init && git submodule update && make && make install

# Build openssl 
RUN git clone https://github.com/openssl/openssl.git || echo ok
RUN cd openssl && git checkout openssl-3.0.6
RUN cd openssl && mkdir -p build-3.0.6
RUN cd openssl/build-3.0.6 && ../Configure && make

RUN cd openssl && git checkout openssl-3.0.7
RUN cd openssl && mkdir -p build-3.0.7
RUN cd openssl/build-3.0.7 && ../Configure && make

RUN cd openssl && git checkout openssl-3.0.8
RUN cd openssl && mkdir -p build-3.0.8
RUN cd openssl/build-3.0.8 && ../Configure && make

RUN DEBIAN_FRONTEND="noninteractive" TZ="Europe/London" apt-get install -y tzdata libbpf0 libdbus-1-3 libdevmapper1.02.1 libestr0 libglib2.0-0 libglib2.0-dev libkmod2 libmnl0 libnewt0.52 libpopt0 sudo systemd libxtables12 libfastjson-dev

# Prepare wcc tests
RUN git clone https://github.com/endrazine/wcc-tests.git && cd wcc-tests && make

WORKDIR /root/wcc-tests

# Fix bug: https://askubuntu.com/questions/1350955/received-symbol-lookup-error-after-running-apt-get
# Those are non matching symbol versions between the chroot and the host
# alternatively, use wld --libify --no-init --strip-symbol-versions
RUN cp chroot-test//lib/x86_64-linux-gnu/libapt-private.so.0.0 /lib/x86_64-linux-gnu/libapt-private.so.0.0
RUN cp ./chroot-test/lib/x86_64-linux-gnu/libdbus-1.so.3 /lib/x86_64-linux-gnu/

# Ajust test script for older versions of the 'file' command
RUN sed s#executable#ELF#gi -i test_all
